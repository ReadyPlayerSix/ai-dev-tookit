{
  "components": {
    "pattern_mapper": {
      "primary_file": "D:\\Projects\\isekaiZen\\machine-learning-optimizer\\isekaizen\\tools\\pattern_mapper.py",
      "description": "Creates pattern maps and augmented datasets",
      "responsibilities": [
        "Maps datasets to pattern types",
        "Tests pattern bias",
        "Performs data augmentation (at 33% ratio)"
      ],
      "dependencies": [
        "pattern_bias_testing",
        "pre_augmentation"
      ]
    },
    "train_dataset": {
      "primary_file": "D:\\Projects\\isekaiZen\\machine-learning-optimizer\\isekaizen\\cli\\train_dataset.py",
      "description": "Main training entry point using prepared datasets",
      "responsibilities": [
        "Loads prepared datasets from pattern_mapper",
        "Runs training with actual augmented data",
        "Uses fibonacci_sync_tracking for optimization"
      ],
      "dependencies": [
        "pre_augmentation",
        "OptimizedTrainer"
      ],
      "notes": "Primary entry point for training - properly reconstructs augmented data"
    },
    "pre_augmentation": {
      "primary_file": "D:\\Projects\\isekaiZen\\machine-learning-optimizer\\isekaizen\\pattern\\pre_augmentation.py",
      "description": "Handles augmentation of datasets",
      "responsibilities": [
        "Creates augmented datasets",
        "Applies pattern-specific augmentations",
        "Tracks augmentation metadata"
      ],
      "dependencies": [],
      "notes": "Works with both augmentation_data and bias_scores parameters"
    },
    "train_optimized": {
      "primary_file": "D:\\Projects\\isekaiZen\\machine-learning-optimizer\\isekaizen\\cli\\train_optimized.py",
      "description": "Alternative training entry point",
      "responsibilities": [
        "Provides optimized training pipeline",
        "Can use prepared datasets or creates own augmentation at 23% ratio"
      ],
      "dependencies": [
        "pre_augmentation",
        "OptimizedTrainer"
      ],
      "notes": "Reference implementation for train_dataset.py behavior"
    }
  },
  "workflow": {
    "pattern_mapping": {
      "entry_point": "pattern_mapper.py",
      "description": "Creates pattern maps and augmented datasets",
      "output": "Augmented datasets with 33% ratio"
    },
    "training": {
      "entry_point": "train_dataset.py",
      "description": "Trains models using prepared datasets",
      "input": "Augmented datasets from pattern_mapper",
      "command": "python -m isekaizen.cli.train_dataset --prepared-dataset <dataset_id>"
    }
  },
  "latest_changes": {
    "date": "2025-05-05",
    "description": "Fixed critical augmentation issue in pre_augmentation.py",
    "changes": [
      "Completely rewrote augmentation data handling in create_pattern_biased_augmentations",
      "Fixed issue where augmentation_data was treated as metadata instead of creating real augmentations",
      "Ensured real samples are created with pattern-specific augmentations",
      "Fixed 'zero augmented samples' issue in train_dataset.py workflow"
    ],
    "previous_changes": {
      "date": "2025-05-05",
      "description": "Fixed indentation error in train_dataset.py",
      "changes": [
        "Removed improperly indented code fragment at the beginning of the file",
        "Rewrote train_dataset.py with proper structure"
      ],
      "previous_changes": {
        "date": "2025-05-05",
        "description": "Fixed DataLoader worker crashes in OptimizedTrainer",
        "changes": [
          "Enhanced DataLoader creation with robust worker handling",
          "Added detection for datasets with dynamic methods",
          "Implemented platform-specific worker count adjustment",
          "Added graceful fallback to single-process mode on error",
          "Enabled persistent_workers option for better stability with multiprocessing"
        ],
        "previous_changes": {
          "date": "2025-05-05",
          "description": "Fixed train_dataset.py to use actual augmented data instead of virtual duplication",
          "changes": [
            "Changed use_pattern_mediator to fibonacci_sync_tracking for compatibility",
            "Added proper support for fibonacci_intervals in serialized history",
            "Modified augmentation handling to create actual augmented samples",
            "Made train_dataset match train_optimized behavior"
          ]
        }
      }
    }
  }
}
