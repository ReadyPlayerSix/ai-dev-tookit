{
  "path": "D:\\Projects\\isekaiZen\\machine-learning-optimizer\\benchmarks.old\\models\\src\\utils\\training\\cortex_first_training.py",
  "imports": [
    {
      "name": "asyncio",
      "line": 1
    },
    {
      "name": "time",
      "line": 2
    },
    {
      "name": "random",
      "line": 3
    },
    {
      "name": "json",
      "line": 4
    },
    {
      "name": "logging",
      "line": 5
    },
    {
      "name": "argparse",
      "line": 6
    },
    {
      "name": "datetime.datetime",
      "line": 7
    },
    {
      "name": "pathlib.Path",
      "line": 8
    },
    {
      "name": "src.cortex.coordinator.CortexCoordinator",
      "line": 10
    },
    {
      "name": "src.cortex.coordinator.ProcessingConfig",
      "line": 10
    },
    {
      "name": "src.cortex.coordinator.DomainType",
      "line": 10
    },
    {
      "name": "src.utils.input_translator.InputTranslator",
      "line": 11
    }
  ],
  "classes": {},
  "functions": {
    "parse_args": {
      "start_line": 18,
      "end_line": 26,
      "parameters": [],
      "return_type": null,
      "calls": [
        {
          "name": "argparse.ArgumentParser",
          "line": 19
        },
        {
          "name": "parser.add_argument",
          "line": 20
        },
        {
          "name": "parser.add_argument",
          "line": 22
        },
        {
          "name": "parser.parse_args",
          "line": 24
        }
      ],
      "code_snippet": "logger = logging.getLogger(__name__)\n\ndef parse_args():\n    parser = argparse.ArgumentParser(description=\"Cortex-first overnight training script\")\n    parser.add_argument(\"--duration\", type=int, default=21600, \n                        help=\"Duration to run training in seconds (default: 21600 for 6 hours)\")\n    parser.add_argument(\"--test\", action=\"store_true\", \n                        help=\"Run in test mode (short duration, e.g., 300 seconds)\")\n    return parser.parse_args()\n\nasync def run_training_session(duration_seconds=21600):\n    \"\"\"Run a cortex-first training session for the specified duration.\"\"\"\n    start_time = time.time()"
    }
  },
  "constants": {}
}